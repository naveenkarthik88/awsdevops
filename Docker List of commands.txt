docker ps
docker ps -a
dokcer images
dokcer images -a
docker info
docker pull <imagename>:<Tag>
docker run -d <image_ID> /bin/bash
docker run -it <image_ID> /bin/bash
docker restart <Container_Name>
docker exec -it <Container_Name> /bin/bash
docker attach <Container_Name>
docker logs <Container_Name>
docker stop <Container_Name>
docker inspect <Container_Name>
docker commit -m "What did you do to the image" -a "Author Name" container-id repository/new_image_name
docker login -u <Docker_Username>
docker images -a
docker push Docker_Username/Repository:Tag
docker export <Container_Name> > <Exporting filename with tar(mybuild4.tar)>
  #docker export practical_elion > pushpa.tar
docker import mybuild4.tar mybuild:importv5
  docker rm $(docker ps -a -q) 
docker rmi $(docker images -q) 	

docker tag <imageID> username/repository:tag  # Tag <image> for upload to registry
docker push username/repository:tag            # Upload tagged image to registry
docker run username/repository:tag                   # Run image from a registry

dodocker inspect <container-id>

docker run -d -P --name web
docker port web
docker-machine ip default
docker stop web

 cd $HOME
 mkdir mysite
 cd mysite/
 echo "a new website" > index.html
 docker run -d -P -v $HOME/mysite:/usr/share/nginx/html --name mysite nginx
 docker port mysite
 docker ps
 docker inspect 3a90851c8359
 elinks 172.31.18.20:32769



docker history --no-trunc <Image ID>   // Then find the its layers and their sizes

docker images --no-trunc
docker info
